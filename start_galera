#!/bin/bash

cd $(dirname $0)

## Sometimes you need to...
random_sleep()
{
    SLEEP_TIME=$RANDOM
    let "SLEEP_TIME %= 30"
    sleep ${SLEEP_TIME}
}

mysql_cluster_check()
{
    val="notok"
    count=$(mysql -uroot -p${MYSQL_ROOT_PASSWORD} -hgalera-lb -N -e 'show databases;'| wc -l) 
    if [ "${count}" -ne "0" ]; then
        val="ok"
    fi
    echo "${val}"
}

./giddyup service wait scale



GALERA_CONF='/etc/mysql/conf.d/001-galera.cnf'

echo "Waiting for Config..."
while [ ! -f "${GALERA_CONF}" ]; do 
   sleep 1
done
echo "Starting galera..."

if [ "$#" -eq "0" ]; then
    leader="false"

    ./giddyup leader check
    if [ "$?" -eq "0" ]; then 
        leader="true"
    fi

    connect_string="--wsrep_cluster_address=gcomm://$(./giddyup ip stringify)?pc.wait_prim=no"
    if [ "${leader}" = "true" ] && [ ! -f "/var/lib/mysql/initialized" ]  && [ ! -f "/etc/mysql/conf.d/clusterlive" ]; then
        # if [ "${leader}" = "true" ]; then
        connect_string="--wsrep-new-cluster --wsrep_cluster_address=gcomm://"
        touch /var/lib/mysql/initialized
        sed -i 's/^safe_to_bootstrap:.*/safe_to_bootstrap: 1/' /var/lib/mysql/grastate.dat
    elif [ "${leader}" = "true" ] && [ ! -f "/etc/mysql/conf.d/clusterlive" ]; then 
     connect_string="--wsrep-new-cluster --wsrep_cluster_address=gcomm://$(./giddyup ip stringify)"
     sed -i 's/^safe_to_bootstrap:.*/safe_to_bootstrap: 1/' /var/lib/mysql/grastate.dat
    fi

    ## Incase this is the initial startup.
    if [ "${leader}" = "false" ] && [ ! -f "/etc/mysql/conf.d/clusterlive" ]; then
        random_sleep
    else
    sleep 5
    fi

    set -- mysqld ${connect_string}
fi 

exec /docker-entrypoint.sh "$@"
